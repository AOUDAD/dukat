plugins {
  id "java"
  id "com.moowork.node" version "1.2.0"
}

def packagePath = "${project.buildDir}/package"
def typescriptVersion = hasProperty("tsVersion") ? tsVersion : "3.4.3"

task prepareNpmPackage(type: Copy) {
  from "package.json"
  into packagePath
}

task installTypescript(type: YarnTask) {
  dependsOn = [prepareNpmPackage]
  // install the express package only
  args = ['add', "typescript@${typescriptVersion}"]
}


task compileTs(type: NodeTask) {
  dependsOn = [installTypescript]
  inputs.file("./tsconfig.json")
  inputs.dir("./src")
  inputs.dir(packagePath)
  outputs.dir("./build/ts")

  script = file("${packagePath}/node_modules/typescript/bin/tsc")

  args = ["-p", "tsconfig.json"]
}

node {
  // https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
  version = '10.15.3'

  download = true

  nodeModulesDir = file(packagePath)
}

task createJar(type: Zip) {
  dependsOn = [compileTs]
  baseName 'dukatts'
  extension 'jar'
  destinationDir file("${project.buildDir}/jar")

  from('build/ts') {
    into 'js'
  }

  from("${packagePath}/node_modules/typescript/lib/tsserverlibrary.js") {
    into 'ts'
  }

  from("${packagePath}/node_modules/typescript/lib") {
    include "**/*.d.ts"
    into 'ts'
  }
}

configurations {
  dukatTsResources
}

configurations.default.extendsFrom(configurations.dukatTsResources)


artifacts {
  dukatTsResources(createJar.archivePath) {
    builtBy createJar
    type "jar"
  }
}