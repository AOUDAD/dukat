// [test] aaa.module_resolved_name.kt
@file:Suppress("INTERFACE_WITH_SUPERCLASS", "OVERRIDING_FINAL_MEMBER", "RETURN_TYPE_MISMATCH_ON_OVERRIDE", "CONFLICTING_OVERLOADS")

import kotlin.js.*
import org.khronos.webgl.*
import org.w3c.dom.*
import org.w3c.dom.events.*
import org.w3c.dom.parsing.*
import org.w3c.dom.svg.*
import org.w3c.dom.url.*
import org.w3c.fetch.*
import org.w3c.files.*
import org.w3c.notifications.*
import org.w3c.performance.*
import org.w3c.workers.*
import org.w3c.xhr.*
import tsstdlib.EventListenerObject
import tsstdlib.DOML2DeprecatedColorProperty

external interface SGMLBaseFontElement : HTMLElement, DOML2DeprecatedColorProperty {
    var size: Number
    fun <K : Nothing?> addEventListener(type: K, listener: (self: SGMLBaseFontElement, ev: Any) -> Any, options: Any = definedExternally, addEventListener: Any)
    @nativeInvoke
    operator fun invoke(type: String, listener: EventListener, options: Boolean = definedExternally)
    @nativeInvoke
    operator fun invoke(type: String, listener: EventListener, options: AddEventListenerOptions = definedExternally)
    @nativeInvoke
    operator fun invoke(type: String, listener: EventListenerObject, options: Boolean = definedExternally)
    @nativeInvoke
    operator fun invoke(type: String, listener: EventListenerObject, options: AddEventListenerOptions = definedExternally)
    fun <K : Nothing?> removeEventListener(type: K, listener: (self: SGMLBaseFontElement, ev: Any) -> Any, optio: Any, removeEventListener: Any)
    @nativeInvoke
    operator fun invoke(type: String, listener: EventListener, options: EventListenerOptions = definedExternally)
    @nativeInvoke
    operator fun invoke(type: String, listener: EventListenerObject, options: EventListenerOptions = definedExternally)
}