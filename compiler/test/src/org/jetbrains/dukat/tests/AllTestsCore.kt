package org.jetbrains.dukat.tests

import org.junit.jupiter.params.ParameterizedTest
import org.junit.jupiter.params.provider.ValueSource

class AllTestsCore : StandardTests() {
    @ParameterizedTest
    @ValueSource(strings = arrayOf(
            "intersectionType/simple",
            "misc/genericLambdaViaTypeAlias",
            "misc/missedOverloads",
            "misc/undefinedAndNullTypes",
            "misc/stringType",
            "misc/parenthesizedType",
            "unionType/withNullOrUndefined",
            "unionType/boom",
            "unionType/simple",
            "unionType/aliases",
            "topLevelMembers/generics/genericsWithConstraint",
            "topLevelMembers/generics/generics",
            "topLevelMembers/variables/variableAsFunctionType",
            "topLevelMembers/variables/variablesAsArray",
            "topLevelMembers/variables/variablesWithoutDeclare",
            "topLevelMembers/variables/variables",
            "topLevelMembers/functions/functionsWithOptionalParameter",
            "topLevelMembers/functions/functionsWithOptionalFunctionType",
            "topLevelMembers/functions/functionsWithVararg",
            "topLevelMembers/functions/functionsWithDefaultArguments",
            "topLevelMembers/functions/functionsWithoutDeclare",
            "topLevelMembers/functions/functions",
            "interface/generics/genericsWithConstraint",
            "interface/generics/genericOptionalMethods",
            "interface/generics/generics",
            "interface/methods/methods",
            "interface/override/simple",
            "interface/override/inModule",
            "interface/override/anyMembers",
            "interface/override/justOverload",
            "interface/optional/optionalVariables",
            "interface/optional/optionalMethodsWithOptionalFunctionType",
            "interface/optional/optionalVariablesAsFunctionType",
            "interface/optional/optionalMethods",
            "interface/inheritance/simple",
            "interface/inheritance/withGeneric",
            "interface/variables/withNumberAsName",
            "interface/variables/variables",
            "interface/conventions/indexSignature",
            "interface/conventions/callSignature",
            "names/ObjectBindingPattern",
            "thisType/inObjectType",
            "thisType/withGenericParameters",
            "thisType/inInterface",
            "thisType/inClass",
            "escaping",
            "typeAlias/useBeforeDeclaration",
            "typeAlias/supertype",
            "typeAlias/recursiveType",
            "typeAlias/inMergedNamespaces",
            "typeAlias/typeParams",
            "typeAlias/resolvedToIntersection",
            "typeAlias/unionTypeParams",
            "tuple/tuple",
            "objectType/functionIntersectionParameter",
            "objectType/function",
            "objectType/emptyObjectTypeAsAny",
            "objectType/inClassMembers",
            "objectType/asTypeAliasInNamespaces",
            "objectType/useOneTraitForSameObjectTypes",
            "objectType/inInterface",
            "objectType/shareTempTypesBetweenModules",
            "objectType/genericViaTypeAlias",
            "objectType/var",
            "objectType/useExportedType",
            "objectType/useJsonWhenPossible",
            "objectType/asTypeAlias",
            "objectType/constructorParameter",
            "objectType/inModuleMembers",
            "objectType/functionTypedIntersectionParameter",
            "objectType/generics",
            "mergeDeclarations/varWith/emptyInterface",
            "mergeDeclarations/varWith/module",
            "mergeDeclarations/varWith/interface",
            "mergeDeclarations/interfaceWithClass",
            "mergeDeclarations/interfaces",
            "mergeDeclarations/classWithInterface",
            "mergeDeclarations/moduleWith/function",
            "mergeDeclarations/moduleWith/functionAndSecondaryWithTrait",
            "mergeDeclarations/moduleWith/classWhenItContainsClass",
            "mergeDeclarations/moduleWith/simpleInterface",
            "mergeDeclarations/moduleWith/classWithStaticMembers",
            "mergeDeclarations/moduleWith/module",
            "mergeDeclarations/moduleWith/simpleClass",
            "module/withNonIdentifierSymbols",
            "module/nestedModulesWithSameName",
            "module/empty/empty",
            "module/empty/withStringName",
            "module/withSlashInName",
            "module/nestedModules",
            "module/referToNonIdentifierModule",
            "module/withMembers",
            "module/withoutDeclare",
            "module/withNonExportDeclarations",
            "module/withDotInName/simple",
            "module/withDotInName/withMerging",
            "module/exportAssignment/exportClassFromGlobalModule",
            "module/exportAssignment/exportFromExternalModule/exportedByDefault",
            "module/exportAssignment/exportFromExternalModule/var",
            "module/exportAssignment/exportFromExternalModule/class",
            "module/exportAssignment/exportFromExternalModule/module",
            "module/exportAssignment/exportFromExternalModule/interface",
            "module/exportAssignment/exportFromExternalModule/overloadedFunctions",
            "module/exportAssignment/withInterface",
            "module/exportAssignment/exportModuleDeclaredAfter",
            "module/exportAssignment/nestedNamespace",
            "module/exportAssignment/nestedNamespaceOutsideModule",
            "module/exportAssignment/refToOuterVarAfterModule",
            "module/exportAssignment/exportImportedFunction",
            "module/exportAssignment/exportDefaultClassInline",
            "module/exportAssignment/exportModuleDeclaredBefore",
            "module/exportAssignment/classFromNestedNamespace",
            "module/exportAssignment/exportDefaultVar",
            "module/exportAssignment/refToOuterVarBeforeModule",
            "module/exportAssignment/classFromNestedNamespaceOutsideModule",
            "module/exportAssignment/exportImportedNamespace",
            "module/exportAssignment/exportImportedClass",
            "module/exportAssignment/exportDefaultExportedFun",
            "module/exportAssignment/exportDefaultInline",
            "module/exportAssignment/exportModuleWhichNameStartsWithUndescrs",
            "module/exportAssignment/exportDefaultFun",
            "enum/withValues",
            "enum/simple",
            "typePredicate/simple",
            "Object",
            "new/simple",
            "new/inTypeLiteral",
            "class/generics/genericsWithConstraint",
            "class/generics/generics",
            "class/methods/methods",
            "class/methods/methodWithComputedName",
            "class/override/simple",
            "class/override/overrideMethodOfParentOfParent",
            "class/override/inModule",
            "class/override/withDefaultArgs",
            "class/override/anyMembers",
            "class/override/justOverload",
            "class/inheritance/simple",
            "class/inheritance/overrides",
            "class/inheritance/withGeneric",
            "class/withoutDeclare",
            "class/variables/withNumberAsName",
            "class/variables/varComputedname",
            "class/variables/variables",
            "class/static/methods",
            "class/static/variables",
            "class/conventions/indexSignature",
            "class/exportTypes",
            "class/constructor/simple",
            "class/constructor/withPropertyDeclaration",
            "tscEscaping",
            "extendExternalDeclarations/simple",
            "extendExternalDeclarations/withGenericParams",
            "import/namespaceImportForward",
            "import/namespaceImport",
            "import/importInSupertype",
            "import/namespaceImportMultiple"
            ))
    fun withValueSource(word: String) {
        assertContentEquals(word)
    }
}